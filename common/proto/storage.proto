syntax = "proto3";
package storage;

import "google/protobuf/timestamp.proto";
import "google/protobuf/empty.proto";

// All Identity information needed for Authentication and Authorization is contained in the message headers

message PutRequest {
  string namespace_id = 1;
  bytes key = 2;
  bytes value = 3;
  optional uint32 crc = 4;
}

message PutResponse {
  uint32 version = 1;
  uint32 crc = 2;
  google.protobuf.Timestamp creationTime = 3;
}

message GetRequest {
  string namespace_id = 1;
  bytes key = 2;
  optional uint32 version = 3;
}

message Metadata {
  google.protobuf.Timestamp creationTime = 1;
  uint32 version = 2;
  uint32 crc = 3;
}

message GetResponse {
  bytes key = 1;
  bytes value = 2;
  Metadata metadata = 3;
}

message DeleteKeyRequest {
  string namespace_id = 1;
  bytes key = 2;
}

message CreateNamespaceRequest {
  string name = 1;
}

message DeleteNamespaceRequest {
  string name = 1;
}

message MigrateToNewNodeRequest {
  uint32 storageNodeNumber = 1;
}

message ListKeysRequest {
  string namespace_id = 1;
  optional uint32 limit = 2;
  optional bytes startKey = 3;
}

message KeyMetadata {
  bytes key = 1;
  Metadata metadata = 2;
}

message ListKeysResponse {
  repeated KeyMetadata keys = 1; // might want to consider returning some metadata here
}

service Storage {
  rpc CreateNamespace(CreateNamespaceRequest) returns (google.protobuf.Empty);
  rpc DeleteNamespace(DeleteNamespaceRequest) returns (google.protobuf.Empty);
  rpc Put(PutRequest) returns (PutResponse);
  rpc Get(GetRequest) returns (GetResponse);
  rpc GetMetadata(GetRequest) returns (Metadata);
  rpc ListKeys(ListKeysRequest) returns (ListKeysResponse);
  rpc Delete(DeleteKeyRequest) returns (google.protobuf.Empty);
  rpc MigrateToNewNode(MigrateToNewNodeRequest) returns (google.protobuf.Empty);
}